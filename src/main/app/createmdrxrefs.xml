<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <flow name="createXrefCallResponse" processingStrategy="synchronous">
        <logger message="Entered_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" doc:name="Start of Flow Logger" category="com.merrillcorp.logging.mdr.xrefs"/>
        <http:request config-ref="MDR_Request_Configuration" path="${mdr.crossref.path}" method="POST" doc:name="Post MDR Xref">

        </http:request>
        <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
        <logger message="Completed_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" category="com.merrillcorp.logging.mdr.xrefs" doc:name="End of Flow Logger"/>
        
    </flow>
    <flow name="addAriaMpiToSfProject" processingStrategy="synchronous">
        <logger message="Entered_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" doc:name="Start of Flow Logger" category="com.merrillcorp.logging.mdr.xrefs"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  entity_type_key: "PROJ",

  on_id_type_key: "SF_PROJ",
  on_id_value: sessionVars.projectModel.sourceData.projectSfdcId,

  add_id_type_key: "Aria_MPI",
  add_id_value: sessionVars.ariaResponse.planInstanceNumber,

  add_qualifier1_key: "ARIAACCT",
  add_qualifier1_value: sessionVars.ariaResponse.accountNumber,

  add_start_date: (sessionVars.projectModel.sourceData.createdAt as :date) as :string {format: 'yyyy-MM-dd'} when sessionVars.projectModel.sourceData.createdAt != null
    	otherwise (now as :date) as :string {format: 'yyyy-MM-dd'},

  (add_end_date: (now as :date) as :string {format: 'yyyy-MM-dd'}) when flowVars.endDate default false
}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
        <flow-ref name="createXrefCallResponse" doc:name="createXrefCallResponse"/>
        <logger message="Completed_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" category="com.merrillcorp.logging.mdr.xrefs" doc:name="End of Flow Logger"/>
        
    </flow>
    <flow name="addAriaAcctToSfProjXRef" processingStrategy="synchronous">
        <logger message="Entered_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" doc:name="Start of Flow Logger" category="com.merrillcorp.logging.mdr.xrefs"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var crossRef = sessionVars.projectModel.billedParties[0].sourceData.crossRefs filter $.IdentiferValue == 'Aria_Acct'
---
{
  entity_type_key: "PROJ",

  on_id_type_key: "SF_PROJ",
  on_id_value: sessionVars.projectModel.sourceData.projectSfdcId,

  add_id_type_key: "Aria_Acct",
  add_id_value: sessionVars.ariaResponse.accountNumber,

  add_qualifier1_key: "CURRENCY",
  add_qualifier1_value: sessionVars.projectModel.sourceData.currency,

  add_qualifier2_key: "LEGALENT",
  add_qualifier2_value: sessionVars.projectModel.sourceData.legalEntity,

  add_start_date: (sessionVars.projectModel.sourceData.createdAt as :date) as :string {format: 'yyyy-MM-dd'} when sessionVars.projectModel.sourceData.createdAt != null
    	otherwise (now as :date) as :string {format: 'yyyy-MM-dd'},
 (add_end_date: (now as :date) as :string {format: 'yyyy-MM-dd'}) when flowVars.endDate default false
}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
        <flow-ref name="createXrefCallResponse" doc:name="createXrefCallResponse"/>
        <logger message="Completed_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" category="com.merrillcorp.logging.mdr.xrefs" doc:name="End of Flow Logger"/>
        
    </flow>
    <flow name="addAriaAcctToSfBillCo" processingStrategy="synchronous">
        <logger message="Entered_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" doc:name="Start of Flow Logger" category="com.merrillcorp.logging.mdr.xrefs"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%function inActiveDate() (sessionVars.projectModel.sourceData.createdAt as :date) as :string {format: 'yyyy-MM-dd'}
---
{
  entity_type_key: "ORG",

  on_id_type_key: "SF_BILLCO",
  on_id_value: sessionVars.projectModel.billedParties[0].sourceData.billingCompany.sfdcId,

  on_qualifier1_key: "VAT",
  on_qualifier1_value: sessionVars.mdrSyncBilledParty.sourceData.billingCompany.vatRegistration,

  add_id_type_key: "Aria_Acct",
  add_id_value: sessionVars.ariaResponse.accountNumber,

  add_qualifier1_key: "CURRENCY",
  add_qualifier1_value: sessionVars.projectModel.sourceData.currency,

  add_qualifier2_key: "LEGALENT",
  add_qualifier2_value: sessionVars.projectModel.sourceData.legalEntity,

  add_start_date: (sessionVars.projectModel.sourceData.createdAt as :date) as :string {format: 'yyyy-MM-dd'} when sessionVars.projectModel.sourceData.createdAt != null
    	otherwise (now as :date) as :string {format: 'yyyy-MM-dd'},
(add_end_date: inActiveDate()) when flowVars.setMdrEndDate default false
}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
        <flow-ref name="createXrefCallResponse" doc:name="createXrefCallResponse"/>
        <logger message="Completed_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" category="com.merrillcorp.logging.mdr.xrefs" doc:name="End of Flow Logger"/>
        
    </flow>
    <flow name="addOraProjToSfProj" processingStrategy="synchronous">
    <logger message="Entered_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" doc:name="Start of Flow Logger" category="com.merrillcorp.logging.mdr.xrefs"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	entity_type_key: "PROJ",
	on_id_type_key: "SF_PROJ",
	on_id_value: sessionVars.projectModel.sourceData.projectSfdcId,
	
	add_id_type_key: "ORA_Proj",
	add_id_value: payload.oracle_project_number
}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
        <flow-ref name="createXrefCallResponse" doc:name="createXrefCallResponse"/>
        <logger message="Completed_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" category="com.merrillcorp.logging.mdr.xrefs" doc:name="End of Flow Logger"/>
        
    </flow>
    <flow name="addProjDSOToProj" processingStrategy="synchronous">
        <logger message="Entered_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" doc:name="Start of Flow Logger" category="com.merrillcorp.logging.mdr.xrefs"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="f759402b-a882-4734-873f-9b368f1e340d">
            <dw:input-session-variable mimeType="application/java" variableName="projectModel"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
  entity_type_key: "PROJ",
  on_id_type_key: "SF_PROJ",
  on_id_value: sessionVars.projectModel.sourceData.projectSfdcId,

  add_id_type_key: "DS1_PROJ",
  add_id_value: (flowVars.dsoResponse.id) when flowVars.dsoResponse.id != null
  	otherwise sessionVars.projectModel.sourceData.datasiteOneId

}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-object-transformer doc:name="Byte Array to Object"/>
        <flow-ref name="createXrefCallResponse" doc:name="createXrefCallResponse"/>
        <set-session-variable variableName="dsoXrefResponse" value="#[payload]" doc:name="Persist DSO MDR Response For Future Use"/>
        <logger message="Completed_Flow=#[flow.name]  MessageId=#[message.id]  ProjectId=#[flowVars.projectSfdcId]" level="INFO" category="com.merrillcorp.logging.mdr.xrefs" doc:name="End of Flow Logger"/>
        
    </flow>
</mule>
